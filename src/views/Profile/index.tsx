import { useRouter } from "next/router";
import React, { FC, useState } from "react";
import ReactPaginate, { ReactPaginateProps } from "react-paginate";

import { LeftArrowIcon, UserBigIcon } from "@/shared/lib/icons";
import { Button, Container, Input, PostCard } from "@/shared/ui/atoms";

import * as S from "./styles";

const ReactPaginateComponent = ReactPaginate as unknown as React.FC<ReactPaginateProps>;

export const ProfilePage: FC = () => {
  const { push } = useRouter();

  const [selectedTypePosts, setSelectedTypePosts] = useState<"myPosts" | "favorites">("myPosts");

  const getGreeting = (): string => {
    const currentHour = new Date().getHours();

    if (currentHour >= 5 && currentHour < 12) {
      return "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ";
    }
    if (currentHour >= 12 && currentHour < 18) {
      return "–î–æ–±—Ä—ã–π –¥–µ–Ω—å";
    }
    if (currentHour >= 18 && currentHour < 22) {
      return "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä";
    }
    return "–î–æ–±—Ä–æ–π –Ω–æ—á–∏";
  };

  const posts = [
    {
      _id: "1",
      image: "/images/testPreviewPhoto.png",
      title: "–£—Ä–æ–∫–∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–∞ –æ—Ç –ë–∏–ª–ª–∞ –£–æ–ª—à–∞",
      date: "1 –Ø–Ω–≤ 2023",
      firstname: "–ê–ª–µ–∫—Å–µ–π",
      surname: "–ò–≤–∞–Ω–æ–≤",
      shortDesc: "–£–∑–Ω–∞–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å 2-14 –≤ 3-–∫—Ä–∞—Ç–Ω—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –°—É–ø–µ—Ä–±–æ—É–ª–∞.",
    },
    {
      _id: "2",
      image: "/images/testPreviewPhoto.png",
      title: "–ò—Å–∫—É—Å—Å—Ç–≤–æ –≤–æ–π–Ω—ã –≤ –±–∏–∑–Ω–µ—Å–µ",
      date: "5 –§–µ–≤ 2023",
      firstname: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      surname: "–ü–µ—Ç—Ä–æ–≤–∞",
      shortDesc: "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –°—É–Ω—å –¶–∑—ã –∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∞–º.",
    },
    {
      _id: "3",
      image: "/images/testPreviewPhoto.png",
      title: "–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
      date: "12 –ú–∞—Ä 2023",
      firstname: "–î–º–∏—Ç—Ä–∏–π",
      surname: "–°–∏–¥–æ—Ä–æ–≤",
      shortDesc: "–ö–∞–∫ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–≤—ã—à–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã.",
    },
    {
      _id: "4",
      image: "/images/testPreviewPhoto.png",
      title: "–ò—Å—Å–ª–µ–¥—É—è –∫–æ—Å–º–æ—Å",
      date: "22 –ê–ø—Ä 2023",
      firstname: "–ï–ª–µ–Ω–∞",
      surname: "–ö—É–∑–Ω–µ—Ü–æ–≤–∞",
      shortDesc: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º –≤ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö.",
    },
    {
      _id: "5",
      image: "/images/testPreviewPhoto.png",
      title: "–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –Ω–∞ –±—é–¥–∂–µ—Ç–µ",
      date: "10 –ú–∞–π 2023",
      firstname: "–ú–∏—Ö–∞–∏–ª",
      surname: "–ü–æ–ø–æ–≤",
      shortDesc: "–°–æ–≤–µ—Ç—ã –∏ —Ö–∏—Ç—Ä–æ—Å—Ç–∏ –¥–ª—è –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –±–ª—é–¥ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç.",
    },
    {
      _id: "6",
      image: "/images/testPreviewPhoto.png",
      title: "–ë—É–¥—É—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
      date: "18 –ò—é–Ω 2023",
      firstname: "–ê–Ω–Ω–∞",
      surname: "–í–æ–ª–∫–æ–≤–∞",
      shortDesc: "–ü—Ä–æ–≥–Ω–æ–∑—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò –≤ –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏.",
    },
    {
      _id: "7",
      image: "/images/testPreviewPhoto.png",
      title: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –º–∏—Ä—É –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ",
      date: "27 –ò—é–ª 2023",
      firstname: "–°–µ—Ä–≥–µ–π",
      surname: "–°–æ–∫–æ–ª–æ–≤",
      shortDesc: "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –º–∏—Ä–æ–≤—ã–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –¥–æ–º–∞.",
    },
    {
      _id: "8",
      image: "/images/testPreviewPhoto.png",
      title: "–û—Å–Ω–æ–≤—ã —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏",
      date: "15 –ê–≤–≥ 2023",
      firstname: "–ú–∞—Ä–∏—è",
      surname: "–õ–µ–±–µ–¥–µ–≤–∞",
      shortDesc: "–ü—Ä–æ—Å—Ç—ã–µ —à–∞–≥–∏ –∫ —Å–Ω–∏–∂–µ–Ω–∏—é —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–ª–µ–¥–∞.",
    },
    {
      _id: "9",
      image: "/images/testPreviewPhoto.png",
      title: "–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫—É–ª–∏–Ω–∞—Ä–∏–∏",
      date: "30 –°–µ–Ω 2023",
      firstname: "–ê–Ω–¥—Ä–µ–π",
      surname: "–ö–æ–∑–ª–æ–≤",
      shortDesc: "–û—Ç –Ω–æ–≤–∏—á–∫–∞ –¥–æ —à–µ—Ñ–∞: –≤–∞—à –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É –≤ –∫—É–ª–∏–Ω–∞—Ä–∏–∏.",
    },
  ];

  const [currentPage, setCurrentPage] = useState(0);
  const postsPerPage = 6;

  const offset = currentPage * postsPerPage;
  const currentPosts = posts.slice(offset, offset + postsPerPage);
  const pageCount = Math.ceil(posts.length / postsPerPage);

  const handlePageClick = ({ selected }: { selected: number }) => {
    setCurrentPage(selected);
  };

  return (
    <Container>
      <S.HeaderProfileLine>
        <S.WelcomeInfo>
          <S.TitleWelcome>{getGreeting()}, Amanda</S.TitleWelcome>
          <S.DateText>
            {(() => {
              const dateStr = new Date().toLocaleDateString("ru-RU", {
                weekday: "short",
                day: "2-digit",
                month: "long",
                year: "numeric",
              });
              return dateStr.charAt(0).toUpperCase() + dateStr.slice(1);
            })()}
          </S.DateText>
        </S.WelcomeInfo>
        <Button theme="orange" onClick={() => push("/posts/create")}>
          –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç &nbsp;üéâ
        </Button>
      </S.HeaderProfileLine>
      <S.BlockUserInfo>
        <S.DecorBackground />
        <S.InnerWrapperUserInfo>
          <S.Line>
            <S.UserInfo>
              <S.UserPhoto>
                <UserBigIcon />
              </S.UserPhoto>
              <S.WrapperUserData>
                <S.Username>Alexa Rawles</S.Username>
                <S.UserEmail>alexarawles@gmail.com</S.UserEmail>
              </S.WrapperUserData>
            </S.UserInfo>
            <Button>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Button>
          </S.Line>
          <S.WrapperInputs>
            <Input stretch label="–ò–º—è:" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" onChange={() => {}} value="" />
            <Input
              stretch
              label="–§–∞–º–∏–ª–∏—è:"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"
              onChange={() => {}}
              value=""
            />
            <Input
              stretch
              label="–ü–æ—á—Ç–∞:"
              placeholder="test@gmail.com"
              onChange={() => {}}
              value=""
            />
            <Input
              stretch
              label="–ü–∞—Ä–æ–ª—å:"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              onChange={() => {}}
              value=""
            />
          </S.WrapperInputs>
        </S.InnerWrapperUserInfo>
      </S.BlockUserInfo>
      <S.TitlePostsList>
        <S.ActiveTitlePostsList
          isActive={selectedTypePosts === "myPosts"}
          onClick={() => setSelectedTypePosts("myPosts")}
        >
          –ú–æ–∏ –ø–æ—Å—Ç—ã
        </S.ActiveTitlePostsList>{" "}
        /{" "}
        <S.ActiveTitlePostsList
          isActive={selectedTypePosts === "favorites"}
          onClick={() => setSelectedTypePosts("favorites")}
        >
          –ò–∑–±—Ä–∞–Ω–Ω—ã–µ
        </S.ActiveTitlePostsList>
      </S.TitlePostsList>
      <S.PostsList>
        {currentPosts.map((post) => (
          <PostCard
            onEdit={() => push(`/posts/${post._id}/edit`)}
            key={post._id}
            image={post.image}
            title={post.title}
            date={post.date}
            firstname={post.firstname}
            surname={post.surname}
            shortDesc={post.shortDesc}
          />
        ))}
      </S.PostsList>
      <ReactPaginateComponent
        previousLabel={
          <S.WrapperPrevBtn>
            <LeftArrowIcon /> –ü—Ä–µ–¥—ã–¥—É—â–∞—è
          </S.WrapperPrevBtn>
        }
        nextLabel={
          <S.WrapperNextBtn>
            –°–ª–µ–¥—É—é—â–∞—è
            <LeftArrowIcon />
          </S.WrapperNextBtn>
        }
        breakLabel="..."
        pageCount={pageCount}
        marginPagesDisplayed={2}
        pageRangeDisplayed={5}
        onPageChange={handlePageClick}
        containerClassName={S.paginationContainer()}
        pageClassName={S.paginationItem()}
        pageLinkClassName={S.paginationLink()}
        activeLinkClassName={S.paginationActiveLink()}
        previousClassName={S.paginationPreviousItem()}
        previousLinkClassName={S.paginationItem()}
        nextClassName={S.paginationNextItem()}
        nextLinkClassName={S.paginationItem()}
        breakClassName={S.paginationBreak()}
        breakLinkClassName={S.paginationBreak()}
        disabledClassName={S.paginationDisabled()}
        activeClassName="active"
        renderOnZeroPageCount={null}
      />
    </Container>
  );
};
